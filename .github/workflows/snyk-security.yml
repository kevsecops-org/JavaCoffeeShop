name: Snyk Security Workflow

on:
  push:
    branches: ["main", "product-search" ]
  pull_request:
    branches: ["main", "product-search"]

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Snyk CLI to check for security issues
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the SAST issues to GitHub Code Scanning
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb
        env:
          # This is where you will need to introduce the Snyk API token created with your Snyk account
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Build
        run: mvn install        
        # Snyk Auth
      - name: Snyk Auth
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      - name: Snyk Branch Info
        run: echo ${{ github.event.pull_request.head.ref }}
        # Runs Snyk Open Source (SCA) analysis.
        # Snyk Open Source Test for "main" branch
      - name: Snyk Open Source test (main)
        if: github.event.pull_request.head.ref == 'main'
        run: snyk test --all-projects --severity-threshold=medium
        # Snyk Open Source Test for "product-search" branch
      - name: Snyk Open Source test (product-search)
        if: github.event.pull_request.head.ref == 'featureSearch'
        run: snyk test --all-projects --severity-threshold=critical --fail-on=upgradable
        # Snyk Code Test
      - name: Snyk Code test
        run: snyk code test || true        
